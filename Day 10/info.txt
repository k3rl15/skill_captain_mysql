Transactions and ACID properties

Concept:

A transaction is a set of SQL statements that are executed as a single unit of work. Transactions are used to ensure that a group of related database operations are executed
as a whole, either all succeeding or all failing. A transaction can be initiated by the user or by an application. The main purpose of transactions is to maintain the 
consistency and integrity of the database. Transactions ensure that all changes to the database are made in a controlled and predictable way, and that data remains consistent 
even in the event of a system failure or error.

ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties that ensure reliable processing of database transactions in a DBMS (Database Management System).
Atomicity: It means that a transaction is treated as a single, indivisible unit of work. Either all changes in the transaction are committed or none of them are, ensuring that
the database is always in a valid state.
Consistency: It ensures that a transaction brings the database from one valid state to another. It guarantees that data written to the database follows all rules and 
constraints.
Isolation: It ensures that multiple transactions can run concurrently without interfering with each other. Each transaction is isolated from others until it is completed to 
avoid any inconsistencies.
Durability: It means that once a transaction is committed, its changes are permanent and survive any subsequent failures. The changes made by the transaction are stored in 
non-volatile memory, so that they can be retrieved even in case of power loss or other system failures.

Together, these properties ensure that database transactions are reliable, secure, and accurate, making the ACID model a fundamental concept in the design of a robust and 
consistent DBMS.
